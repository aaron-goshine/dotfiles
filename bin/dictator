#!/usr/local/bin/python3
import random
from subprocess import call, Popen, PIPE

def fetch_word_definition(word):
    process = Popen(['minidict', word], stdout=PIPE)
    (output, err) = process.communicate()
    exit_code = process.wait()
    if exit_code == 0:
        return output.decode('utf-8').strip()
    return "Definition not found."

word_list = open('/usr/share/dict/words')
words = [word.strip() for word in word_list if 3 < len(word) < 12]
random.shuffle(words)
words = words[:10]

score = 0

for index, word in enumerate(words):
    call(['say', word])
    user_input = input('Please type what you heard: ').strip()
    
    definition = fetch_word_definition(word)
    if user_input.lower() == word.lower():
        print('Well done!')
        score += 1
        print(f"Definition: {definition}")
    else:
        print('=========================================')
        print(f'Expected word: {word}')
        print(f"Definition: {definition}")
        print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
        print(f'Entered word: {user_input}')
        print('Try again!')
        print('=========================================')
        
print(f'Final Score: {score}/{len(words)}')
